pipeline {
    agent any

    stages {
        stage('Pulling from GitHub') {
            steps {
                script {
                    git branch: "main", url: "https://github.com/keemer92/practice.git"
                }
            }
        }
        stage('SonarQube Analysis') {
            steps {
                script {
                    // Run SonarQube analysis to make sure the developers code is good to go
                    sh '''
                        sonar-scanner \
                        -Dsonar.projectKey=my-project-key \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=http://your-sonarqube-server \
                        -Dsonar.login=your-sonarqube-token
                    '''
                }
            }
        }
        stage('Terraform Setup and Apply') {
            steps {
                script {
                    // Provision the AWS resources (VPC, EC2, Subnet, LB, IGW, ASG, IAM, creating a user, creating a group)
                    sh '''
                        terraform init
                        terraform plan 
                        terraform apply 
                    '''
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image
                    sh 'docker build -t my-image-name:latest .'
                }
            }
        }
        stage('Scan with Trivy') {
            steps {
                script {
                    // Scan the Docker image with Trivy
                    sh 'trivy image --severity HIGH,CRITICAL --exit-code 1 my-image-name:latest'
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    // Push the Docker image to a registry
                    sh 'docker push my-image-name:latest'
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    // Apply Kubernetes manifests
                    sh '''
                        kubectl apply -f path/to/your/deployment.yaml
                        kubectl apply -f path/to/your/service.yaml
                    '''
                }
            }
        }
        stage('Configure Prometheus Monitoring') {
            steps {
                script {
                    // Optionally, apply Prometheus configuration
                    // Make sure to have your prometheus config files ready
                    sh '''
                        kubectl apply -f path/to/your/prometheus-config.yaml
                        kubectl apply -f path/to/your/alertmanager-config.yaml
                    '''
                }
            }
        }
    }
}

