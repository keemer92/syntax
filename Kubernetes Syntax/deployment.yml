apiVersion: apps/v1
kind: Deployment 
metadata:
  name: The name of the deployment #ex: myapp-deployment
  labels:
    app: categorizing/grouping #ex: myapp
    type: more categorizing/grouping #ex: front-end
spec: 
  template:
    metadata:
      name: The name of the pod #myapp-pod
      labels:
        app: categorizing/grouping #ex: myapp
        type: more categorizing/grouping #ex: front-end
    spec:
      containers:
      - name: the name of the container #ex: nginx-container
        image: the name of the image #ex: nginx
        ports:
        - containerPort: 80
  replicas: How many pods do you want
  selector:
    matchLabels:
      app: 
      type: The same as the pod template #ex: front-end

Deployment commands:
kubectl create -f deployment.yml: creates a deployment
kubectl apply -f deployment.yml: creates or updates a deployment
kubectl run <DeploymentName> --image=<IMAGENAME>: creates a deployment with an image name
kubectl get deployment: gets a list of the deployments
kubectl get all: shows a list of the deployments, replicaset and pods
kubectl rollout status deployment/<DEPLOYMENTNAME>: gives the status of the rollout
kubectl rollout history deployment/<DEPLOYMENTNAME>: gives the history of the rollout
kubectl set image deployment/<DEPLOYMENTNAME> <CONTAINERNAME>=<IMAGE>:VERSION: updates the image and changes the configuration
kubectl undo deployment/<DEPLOYMENTNAME>: Command to undo the deployment
kubectl describe deployment <DeploymentName>: Command to get details of a deployment



